<?xml version="1.0" encoding="UTF-8"?>
<configuration debug="false" scan="true" scanPeriod="10 seconds">
    <include resource="org/springframework/boot/logging/logback/base.xml"/>
    <contextName>logback</contextName>
    <property name="log.root.level" value="DEBUG" /> <!-- 日志级别 -->  
     <property name="log.other.level" value="DEBUG" /> <!-- 其他日志级别 --> 
     <property name="log.moduleName" value="elasticSearch5.2" />  <!-- 模块名称， 影响日志配置名，日志文件名 -->
     <property name="log.base" value="D:/Git/spring-boot-starter-yisake/spring-boot-helloWorld/log" />  
    <!--property name="log.path" value="D:/Git/spring-boot-starter-yisake/spring-boot-helloWorld/log/" /-->
    <property name="log.max.size" value="1MB" /> <!-- 日志文件大小,超过这个大小将被压缩 -->  

<!--控制台输出 -->  
    <appender name="stdout" class="ch.qos.logback.core.ConsoleAppender">
	    <filter class="ch.qos.logback.classic.filter.LevelFilter">   
	      <level>INFO</level>   
	      <onMatch>ACCEPT</onMatch>   
	      <onMismatch>DENY</onMismatch>   
	    </filter>    
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">  
            <Pattern>%date{yyyy-MM-dd HH:mm:ss.SSS} %-5level[%thread]%logger{56}.%method:%L -%msg%n</Pattern>  
        </encoder>  
    </appender> 

<!-- 用来保存输出所有级别的日志 -->  
    <appender name="file.all" class="ch.qos.logback.core.rolling.RollingFileAppender">  
        <File>${log.base}/${log.moduleName}.log</File><!-- 设置日志不超过${log.max.size}时的保存路径，注意如果   
            是web项目会保存到Tomcat的bin目录 下 -->  
		<filter class="ch.qos.logback.classic.filter.LevelFilter">
		     <level>DEBUG</level>
		     <onMatch>ACCEPT</onMatch>
		     <onMismatch>DENY </onMismatch>
		 </filter>
        <!-- 滚动记录文件，先将日志记录到指定文件，当符合某个条件时，将日志记录到其他文件。 -->  
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">  
            <FileNamePattern>${log.base}/archive/${log.moduleName}_all_%d{yyyy-MM-dd}.%i.log.zip  
            </FileNamePattern>  
            <!-- 文件输出日志 (文件大小策略进行文件输出，超过指定大小对文件备份) -->  
            <timeBasedFileNamingAndTriggeringPolicy  
                class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">  
                <maxFileSize>${log.max.size}</maxFileSize>  
            </timeBasedFileNamingAndTriggeringPolicy>  
        </rollingPolicy>  
        <!-- 日志输出的文件的格式 -->  
        <layout class="ch.qos.logback.classic.PatternLayout">  
            <pattern>%date{yyyy-MM-dd HH:mm:ss.SSS} %-5level[%thread]%logger{56}.%method:%L -%msg%n</pattern>  
        </layout>  
    </appender>

<!-- root将级别为${log.root.level}及大于${log.root.level}的日志信息交给已经配置好的名为“Console”的appender处理，“Console”appender将信息打印到Console,其它同理 -->  
    <root level="${log.root.level}">  
        <appender-ref ref="stdout" /> <!--  标识这个appender将会添加到这个logger -->  
        <appender-ref ref="file.all" />
    </root> 
</configuration>